{"version":3,"sources":["Components/Quiz/Timer/styled.js","Components/Quiz/Timer/index.jsx","Components/Quiz/CourseHeader/index.jsx","Components/Introduction/index.jsx","Components/Quiz/QuestionSection/index.jsx","Components/Layout/Dashboard/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["TimeContainer","styled","h3","momentDurationFormatSetup","moment","useStyles","makeStyles","root","width","position","top","Timer","duration","classes","React","useState","progress","setProgress","time","setTime","progressColor","setProgressColor","factor","Math","floor","useEffect","id","setInterval","changeColor","clearInterval","round","className","LinearProgress","variant","value","colorPrimary","style","height","display","justifyContent","zIndex","format","CourseHeader","flexGrow","paper","padding","textAlign","color","heading","Card","background","backdropFilter","CardContent","Typography","fontSize","QuestionSection","numberOne","setNumberOne","numberTwo","setNumberTwo","numberThree","setNumberThree","response","setResponse","error","setError","genrateValues","answers","answer","random","length","number1","number2","marginTop","Grid","TextField","multiline","rowsMax","inputProps","border","maxLength","toString","inputMode","onChange","event","input","Number","target","isValidMove","Dashboard","props","Paper","flexDirection","SimpleCard","bullet","margin","transform","title","pos","marginBottom","inside","alignContent","marign","button","loading","setLoading","setTimeout","Skeleton","paddingTop","App","domElement","game","getAttribute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","document","querySelectorAll","forEach","Div","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.708ca637.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const TimeContainer = styled.h3`\n  padding: 4px;\n  margin: 0;\n  width: 100px;\n  text-align: center;\n  border-radius: 0%;\n  font-size: 36px;\n  border: 1px solid black;\n  font-family: 'Open Sans', sans-serif;\n  background: black;\n  color: white;\n  border-radius: 12px;\n  right: 10px;\n  position: relative;\n`;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport momentDurationFormatSetup from 'moment-duration-format';\nimport Card from '@material-ui/core/Card';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TimeContainer } from './styled';\n\nmomentDurationFormatSetup(moment);\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    position: 'relative',\n    top: '30px',\n  },\n});\n\nconst Timer = ({ duration }) => {\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(100);\n  const [time, setTime] = useState(duration);\n  const [progressColor, setProgressColor] = useState('green');\n  const factor = Math.floor(duration / 100);\n  useEffect(() => {\n    const id = setInterval(() => {\n      if (time !== 0) {\n        setTime(time - 1);\n        if (time % factor === 0) setProgress(progress - 1);\n        changeColor();\n      }\n    }, 1000);\n    return () => {\n      clearInterval(id);\n    };\n  }, [time]);\n\n  const changeColor = () => {\n    if (time === Math.round(duration / 2)) setProgressColor('yellow');\n    else if (time === 60) setProgressColor('red');\n    else setProgressColor('green');\n  };\n\n  const displayTime = () => moment.duration(time, 'seconds').format('hh:mm:ss');\n\n  return (\n    <>\n      <div className={classes.root}>\n        <LinearProgress\n          variant=\"determinate\"\n          value={progress}\n          classes={{ colorPrimary: progressColor }}\n          style={{ height: '5px' }}\n        />\n      </div>\n      <div\n        style={{ display: 'flex', justifyContent: 'flex-end', position: 'relative', zIndex: '10' }}\n      >\n        <TimeContainer>{displayTime()}</TimeContainer>\n      </div>\n    </>\n  );\n};\n\nexport default Timer;\n\nTimer.propTypes = {\n  duration: PropTypes.number.isRequired,\n};\n","import { Card, CardContent, Typography } from '@material-ui/core';\nimport React from 'react';\n\nconst CourseHeader = ({ heading }) => {\n  return (\n    <>\n      <Card style={{ background: 'transparent', backdropFilter: 'blur(4px)' }}>\n        <CardContent>\n          <Typography variant=\"h3\">{heading}</Typography>\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport default CourseHeader;\n","import React from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: 2,\n      textAlign: 'center',\n      color: 'secondary',\n    },\n  });\n\n\nconst CenteredGrid = () => {\n  \n  const classes = useStyles();\n\n  return (\n    <>\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>xs=12</Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper}>xs=6</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>xs=3</Paper>\n        </Grid>\n      </Grid>\n    </div>\n    </>\n  );\n}\n\nexport default CenteredGrid;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Card, Grid, TextField, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Timer from '../Timer';\nimport Dashboard from '../../Introduction';\nimport CourseHeader from '../CourseHeader';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 75,\n    '& .MuiInputBase-root': {\n      fontSize: '3rem',\n    },\n  },\n});\n\nconst QuestionSection = ({ duration }) => {\n  const classes = useStyles();\n  const [numberOne, setNumberOne] = useState(0);\n  const [numberTwo, setNumberTwo] = useState(0);\n  const [numberThree, setNumberThree] = useState(0);\n  const [response, setResponse] = useState('');\n  const [error, setError] = useState(false);\n\n  const genrateValues = () => {\n    const answers = [10, 100, 1000];\n    const answer = answers[Math.floor(Math.random() * answers.length)];\n\n    let number1 = 0;\n    switch (answer) {\n      case 10:\n        number1 = Math.round(Math.random() * 9);\n        break;\n      case 100:\n        number1 = 10 + Math.round(Math.random() * 89);\n        break;\n      case 1000:\n        number1 = 100 + Math.round(Math.random() * 899);\n        break;\n      default:\n        number1 = Math.round(Math.random() * 10);\n    }\n\n    const number2 = answer - number1;\n\n    setNumberThree(answer);\n    setNumberTwo(number2);\n    setNumberOne(number1);\n  };\n\n  useEffect(() => {\n    genrateValues();\n  }, []);\n\n  const isValidMove = (event) => {\n    const input = Number(event.target.value);\n    setResponse(event.target.value);\n    if (event.target.value === '') {\n      setError(false);\n    } else if (input !== numberTwo) {\n      setError(true);\n    } else {\n      setResponse('');\n      setError(false);\n      genrateValues();\n    }\n  };\n\n  return (\n    <>\n      <CourseHeader heading={'Course Introduction'} />\n      <Timer duration={duration} />\n      <Card\n        style={{\n          padding: '50px',\n          textAlign: 'center',\n          marginTop: '3%',\n          height: '100%',\n          background: 'transparent',\n          backdropFilter: 'blur(4px)',\n        }}\n      >\n        <Grid>\n          <Typography variant=\"h3\" display=\"inline\">\n            {numberOne}\n          </Typography>\n          <Typography variant=\"h3\" display=\"inline\">\n            +\n          </Typography>\n          <Typography variant=\"h3\" display=\"inline\">\n            <TextField\n              multiline={false}\n              rowsMax={1}\n              className={classes.root}\n              inputProps={{\n                style: {\n                  padding: 0,\n                  border: `${error ? '2px' : '1px'} solid ${error ? 'red' : 'black'}`,\n                },\n                maxLength: (numberThree - numberOne).toString().length,\n                inputMode: 'numeric',\n              }}\n              error={error}\n              value={response}\n              onChange={(event) => isValidMove(event)}\n            />\n          </Typography>\n          <Typography variant=\"h3\" display=\"inline\">\n            =\n          </Typography>\n          <Typography variant=\"h3\" display=\"inline\">\n            {numberThree}\n          </Typography>\n        </Grid>\n        {/* <Button \n        variant=\"contained\" color=\"primary\" style={{ marginTop: 10, width: '50%' }}>\n          <Typography variant=\"h6\" display=\"inline\" style={{ color: 'white' }}>\n            NEXT\n          </Typography>\n        </Button> */}\n      </Card>\n    </>\n  );\n};\n\nexport default QuestionSection;\n","import React, { useEffect, useState } from 'react';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Container } from '@material-ui/core';\nimport Timer from '../../Quiz/Timer';\nimport QuestionSection from '../../Quiz/QuestionSection';\nimport './style.css';\n\nexport const Dashboard = (props) => {\n  return (\n    <Paper variant=\"outlined\" style={{ display: 'flex', flexDirection: 'row' }}>\n      <SimpleCard />\n      {/* <Skeleton variant=\"rect\" width={210} height={118} /> */}\n    </Paper>\n  );\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: 900,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  inside: {\n    flexDirection: 'row',\n    display: 'flex',\n    height: '60%',\n    alignContent: 'center',\n    justifyContent: 'center',\n    marign: '0px 20px',\n  },\n  button: {\n    width: '100%',\n    height: '100%',\n  },\n});\n\nfunction SimpleCard() {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  });\n\n  return (\n    <Card className={[classes.root, 'dashboard-background']}>\n      <CardContent>\n        {loading ? (\n          <Skeleton variant=\"rect\" width=\"100%\" height=\"20%\">\n            <div style={{ paddingTop: '10%' }} />\n          </Skeleton>\n        ) : (\n          // <img\n          //   src=\"https://i.pinimg.com/originals/5a/bf/93/5abf939069cc0ae4633e9b1670f11ed5.jpg\"\n          //   width=\"300\"\n          //   height=\"400\"\n          //   alt=\"\"\n          // />\n          <QuestionSection duration={5 * 60} />\n        )}\n      </CardContent>\n\n      {/* <CardContent style={{ height: '75%' }}>\n        {loading ? (\n          <Skeleton variant=\"rect\" width=\"100%\" height=\"100%\">\n            <div style={{ paddingTop: '10%' }} />\n          </Skeleton>\n        ) : (\n          <img\n            src=\"https://i.pinimg.com/originals/5a/bf/93/5abf939069cc0ae4633e9b1670f11ed5.jpg\"\n            width=\"300\"\n            height=\"400\"\n            alt=\"\"\n          />\n        )}\n      </CardContent> */}\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Dashboard } from './Components/Layout/Dashboard';\nimport Quiz from './Components/Quiz/Quiz';\nimport './style.css';\n\nexport default function App({ domElement }) {\n  const title = domElement.getAttribute('data-title');\n  const course = domElement.getAttribute('data-course');\n  const game = domElement.getAttribute('data-exercise');\n\n  const [loading, setLoading] = useState();\n  const [error, setError] = useState('');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setLoading(false);\n    // fetch(`https://quizes.free.beeceptor.com/quiz-maths`)\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     setLoading(false);\n    //     console.log(data);\n    //     setData(data);\n    //   })\n    //   .catch((e) => {\n    //     console.log(e)\n    //     setLoading(false);\n    //     setError('error fetching from reddit');\n    //   });\n  }, [game]);\n\n  return (\n    // <div className=\"quiz_widget__app\">\n    //   <h1 className=\"quiz_widget__header\">{title}</h1>\n    //   <div className=\"quiz_widget__inner\">\n    //     {loading && 'Loading...'}\n    //     {error && error}\n    //     <Dashboard />\n    //   </div>\n    //   <p className=\"reddit_widget__powered_by\">\n    //     This widget is powered by{' '}\n    //     <a href=\"https://dvm.academy\" rel=\"noopener noreferrer\" target=\"_blank\">\n    //       DVM Academy\n    //     </a>\n    //   </p>\n    // </div>\n    <Dashboard />\n  );\n}\n\nfunction renderQuiz(game) {\n  switch (game) {\n    case 'simple_math_addition':\n      return <Quiz quiz={game} />;\n    case 'simple_math_subtraction':\n      return <Quiz quiz={game} />;\n    default:\n      return <Quiz />;\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Find all widget divs\nconst WidgetDivs = document.querySelectorAll('.quiz_widget')\n\nWidgetDivs.forEach(Div => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App domElement={Div} />\n    </React.StrictMode>,\n    Div\n  );\n})\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}