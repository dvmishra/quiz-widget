{"version":3,"sources":["Components/Quiz/Timer/styled.js","Components/Quiz/Timer/index.jsx","Components/Quiz/CourseHeader/index.jsx","Components/Quiz/Message/index.jsx","Components/Quiz/QuestionSection/styled.js","Components/Quiz/Spinner/images/above_average.png","Components/Quiz/Timer/Timer.jsx","Components/Quiz/QuestionSection/index.jsx","Components/Layout/Dashboard/UserContext.js","utilities/Queue.js","images/quiz_board.svg","images/question.svg","images/excellent.svg","images/good.svg","images/poor.svg","Components/Layout/Dashboard/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["TimeContainer","styled","div","keyframes","shake","h3","props","background","momentDurationFormatSetup","moment","useStyles","makeStyles","root","width","position","top","Timer","duration","updateDuration","classes","React","useState","progress","setProgress","Number","time","setTime","timerColor","setTimerColor","factor","Math","floor","useEffect","id","setInterval","changeColor","clearInterval","round","style","marginTop","className","LinearProgress","variant","height","value","display","justifyContent","zIndex","format","CourseHeader","heading","Card","borderBottom","marginBottom","backdropFilter","CardContent","Typography","fontWeight","color","Message","children","padding","textAlign","lineHeight","SlideInRightAnimate","slideInRight","FadeInUpAnimate","fadeInUp","GameOverAnimate","flash","ScoreContainer","section","withStyles","paper","border","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","theme","backgroundColor","palette","primary","main","common","white","MenuItem","userData","games","UserContext","createContext","Node","this","next","Queue","size","rear","front","currentSize","item","node","fontSize","currentScore","float","left","borderBottomRightRadius","currentScoreText","paddingLeft","frequency","score","freq","countValue","reduce","countValues","obj","kthPercentile","valueFrequencies","k","index","frequencyMap","n","bucketStartIndex","keys","forEach","arrayItem","push","values","i","length","bucketEndIndex","sortedNth","percentileTenth","numberMap","numberQueue","gameDetails","QuestionSection","game_details","g_id","u_id","numberOne","setNumberOne","numberTwo","setNumberTwo","numberThree","setNumberThree","response","setResponse","error","setError","gameDuration","count","setCount","percentile","setPercentile","isIntroduction","setIsIntroduction","game","setGame","calculatingScore","setCalculatingScore","finalMessage","setFinalMessage","uuidv4","playId","setPlayId","username","startTime","Date","toISOString","useContext","user","setUser","genrateValues","answer","number2","number1","random","isFull","dequeue","enqueue","window","onbeforeunload","event","e","preventDefault","returnValue","name","description","paddingTop","introduction","Button","onClick","remainingTime","JSON","parse","stringify","_updateTime","Grid","TextField","autoFocus","multiline","rowsMax","inputProps","maxLength","inputMode","onChange","input","target","setTimeout","isValidMove","payload","axios","post","then","updateScore","textTransform","fontFamily","message","challenger_score","genius_score","master_score","console","log","myPercentileEndRange","myPercentileStartRange","myPercentileValue","toFixed","myPercentile","calculateLevel","maxHeight","overflowY","map","clear","Dashboard","Paper","flexDirection","Provider","SimpleCard","bullet","margin","transform","title","pos","inside","alignContent","marign","button","loading","setLoading","data","setData","msg","catch","exception","md","Skeleton","App","domElement","getAttribute","container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","document","querySelectorAll","Div","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ffb5b344.chunk.js","sourcesContent":["import { shake } from 'react-animations';\nimport styled, { keyframes } from 'styled-components';\n\nexport const ShakeAnimate = styled.div`\n  animation: 1.5s ${keyframes`${shake}`} 2;\n`;\n\nexport const TimeContainer = styled.h3`\n  padding: 4px;\n  margin: 0;\n  width: 100px;\n  text-align: center;\n  border-radius: 0%;\n  font-size: 36px;\n  border: ${(props) => `1px solid ${props.background}`};\n  font-family: 'Open Sans', sans-serif;\n  background: ${(props) => props.background};\n  color: white;\n  border-radius: 12px;\n  right: 10px;\n  position: relative;\n`;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport momentDurationFormatSetup from 'moment-duration-format';\nimport Card from '@material-ui/core/Card';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TimeContainer, ShakeAnimate } from './styled';\nimport ProgressBar from '@ramonak/react-progress-bar';\nmomentDurationFormatSetup(moment);\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    position: 'relative',\n    top: '35px',\n  },\n});\n\nconst Timer = ({ duration, updateDuration }) => {\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(100);\n  const [time, setTime] = useState(Number(duration));\n  const [timerColor, setTimerColor] = useState('#2962ff');\n  const factor = Math.floor(duration / 100);\n  useEffect(() => {\n    const id = setInterval(() => {\n      if (time !== 0) {\n        setTime(time - 1);\n        if (time % factor === 0) setProgress(progress - 1);\n        changeColor();\n      }\n      updateDuration(time);\n    }, 1000);\n    return () => {\n      clearInterval(id);\n    };\n  }, [time]);\n\n  const changeColor = () => {\n    if (Number(duration) === 60) {\n      if (time === 15) setTimerColor('#dd2c00');\n      if (time === Math.round(Number(duration) / 2)) setTimerColor('darkorange');\n    } else {\n      if (time === Math.round(Number(duration) / 2)) setTimerColor('darkorange');\n      if (time === 60) setTimerColor('#dd2c00');\n    }\n  };\n\n  const displayTime = () => moment.duration(time, 'seconds').format('hh:mm:ss');\n\n  return (\n    <div style={{ marginTop: '-10px' }}>\n      <div className={classes.root}>\n        <LinearProgress variant=\"determinate\" style={{ height: '10px' }} value={progress} />\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'flex-end', zIndex: '10' }}>\n        <TimeContainer background={timerColor}>{displayTime()}</TimeContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;\n\nTimer.propTypes = {\n  duration: PropTypes.number.isRequired,\n  updateDuration: PropTypes.func.isRequired,\n};\n","import { Card, CardContent, Typography } from '@material-ui/core';\nimport React from 'react';\n\nconst CourseHeader = ({ heading }) => {\n  return (\n    <>\n      <Card\n        style={{\n          background: 'transparent',\n          borderBottom: '3px solid #7482E8',\n          marginBottom: '10px',\n          backdropFilter: 'blur(4px)',\n        }}\n      >\n        <CardContent>\n          <Typography style={{ fontWeight: 600, color: '#5564CC' }} variant=\"h3\">\n            {heading}\n          </Typography>\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport default CourseHeader;\n","import { Card } from '@material-ui/core';\nimport React from 'react';\n\nconst Message = ({ children, className }) => (\n  <Card\n    style={{\n      padding: '50px',\n      textAlign: 'center',\n      marginTop: '3%',\n      marginBottom: '5%',\n      height: '100%',\n      background: 'transparent',\n      backdropFilter: 'blur(4px)',\n      lineHeight: '2em',\n      borderBottom: '3px solid #7482E8',\n    }}\n    className={className}\n  >\n    {children}\n  </Card>\n);\n\nexport default Message;\n","import { slideInRight, fadeInUp, flash } from 'react-animations';\nimport styled, { keyframes } from 'styled-components';\n\nexport const SlideInRightAnimate = styled.div`\n  animation: 1.5s ${keyframes`${slideInRight}`} 1;\n`;\n\nexport const FadeInUpAnimate = styled.div`\n  animation: 1s ${keyframes`${fadeInUp}`} 1;\n`;\n\nexport const GameOverAnimate = styled.div`\n  animation: 1s ${keyframes`${flash}`} infinite;\n`;\n\nexport const ScoreContainer = styled.section`\n  border: 1px solid black;\n`;\n","export default __webpack_public_path__ + \"static/media/above_average.1364f779.png\";","import React, { useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\nexport default function DurationMenu({ setTime }) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [duration, setDuration] = React.useState('300');\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleItemClick = (event) => {\n    setAnchorEl(null);\n    const { duration } = event.currentTarget.dataset;\n    setDuration(duration);\n    setTime(Number(duration));\n  };\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"customized-menu\"\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleClick}\n        style={{ marginTop: 10, width: '100%' }}\n      >\n        <Typography variant=\"h6\">\n          Choose Timing : {Number(duration) / 60} {duration === '60' ? 'min' : 'mins'}\n        </Typography>\n      </Button>\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem data-duration=\"60\" onClick={handleItemClick} selected={duration === '60'}>\n          <ListItemIcon>\n            <AccessTimeIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"1 min\" />\n        </StyledMenuItem>\n        <StyledMenuItem data-duration=\"180\" onClick={handleItemClick} selected={duration === '180'}>\n          <ListItemIcon>\n            <AccessTimeIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"3 mins\" />\n        </StyledMenuItem>\n        <StyledMenuItem data-duration=\"300\" onClick={handleItemClick} selected={duration === '300'}>\n          <ListItemIcon>\n            <AccessTimeIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"5 mins\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { Button, Card, Grid, TextField, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Timer from '../Timer';\nimport CourseHeader from '../CourseHeader';\nimport Message from '../Message';\nimport { FadeInUpAnimate, SlideInRightAnimate, GameOverAnimate, ScoreContainer } from './styled';\nimport './style.css';\nimport Spinner from '../Spinner';\nimport SetTimer from '../Timer/Timer';\nimport { UserContext } from '../../Layout/Dashboard/UserContext';\nimport quiz from '../../../images/quiz_board.svg';\nimport question from '../../../images/question.svg';\nimport excellent from '../../../images/excellent.svg';\nimport good from '../../../images/good.svg';\nimport poor from '../../../images/poor.svg';\nimport { Queue } from '../../../utilities/Queue';\nimport {v4 as uuidv4} from \"uuid\";\nimport axios from 'axios';\n \nconst useStyles = makeStyles({\n  root: {\n    width: 120,\n    '& .MuiInputBase-root': {\n      fontSize: '3rem',\n    },\n  },\n  currentScore: {\n    position: 'absolute',\n    float: 'left',\n    top: 0,\n    left: 0,\n    width: 50,\n    height: 50,\n    backgroundColor: '#8D9EF8',\n    borderBottomRightRadius: 50,\n  },\n  currentScoreText: {\n    textAlign: 'left',\n    justifyContent: 'center',\n    paddingLeft: 10,\n    color: 'white',\n    fontWeight: 700,\n  },\n});\n \nconst frequency = [\n  { score: '24', freq: '5' },\n  { score: '36', freq: '9' },\n  { score: '41', freq: '12' },\n  { score: '57', freq: '6' },\n  { score: '62', freq: '8' },\n  { score: '68', freq: '5' },\n  { score: '72', freq: '14' },\n  { score: '81', freq: '5' },\n  { score: '93', freq: '3' },\n];\n \nlet countValue = frequency.reduce((countValues, obj) => (countValues += Number(obj.freq)), 0);\n \nconst sortedNth = (frequencyMap, n) => {\n  let bucketStartIndex = 0;\n  let keys = [];\n  frequency.forEach((arrayItem) => {\n    keys.push(Number(arrayItem.score));\n  });\n \n  let values = [];\n  frequency.forEach((arrayItem) => {\n    values.push(Number(arrayItem.freq));\n  });\n \n  for (let i = 0; i < keys.length; i += 1) {\n    let currentFrequency = values[i];\n    let bucketEndIndex = bucketStartIndex + currentFrequency;\n    if (n < bucketEndIndex) {\n      return keys[i];\n    }\n    bucketStartIndex = bucketEndIndex;\n  }\n \n  return keys[keys.length - 1];\n};\n \nconst kthPercentile = (valueFrequencies, k) => {\n  const index = (k / 100) * countValue;\n  return sortedNth(valueFrequencies, Math.floor(index));\n};\n \nlet percentileTenth = [];\nfor (let i = 0; i <= 100; i += 10) {\n  percentileTenth.push(Number(kthPercentile(frequency, i)));\n}\n \nconst myPercentile = (score) => {\n  let myPercentileEndRange = Number(percentileTenth.length - 1);\n  for (let i = 1; i < percentileTenth.length; i += 1) {\n    if (Number(score) < percentileTenth[i]) {\n      myPercentileEndRange = i;\n      break;\n    }\n  }\n \n  let myPercentileStartRange = myPercentileEndRange - 1;\n \n  const myPercentileValue = (\n    myPercentileStartRange * 10 +\n    ((score - percentileTenth[myPercentileStartRange] + 1) /\n      (percentileTenth[myPercentileEndRange] - percentileTenth[myPercentileStartRange] + 1)) *\n      10\n  ).toFixed(2);\n  return myPercentileValue < 0 ? 0 : myPercentileValue > 100 ? 100 : myPercentileValue;\n};\n \nlet numberMap = {};\nconst numberQueue = new Queue(10);\nlet gameDetails = {};\n \nconst QuestionSection = ({ game_details, g_id, u_id }) => {\n  const classes = useStyles();\n  const [numberOne, setNumberOne] = useState(0);\n  const [numberTwo, setNumberTwo] = useState(0);\n  const [numberThree, setNumberThree] = useState(0);\n  const [response, setResponse] = useState('');\n  const [error, setError] = useState(false);\n  const [time, setTime] = useState(Number(game_details.duration));\n  const [gameDuration, setGameDuraion] = useState(Number(game_details.duration));\n  const [count, setCount] = useState(0);\n  const [percentile, setPercentile] = useState(0);\n  const [isIntroduction, setIsIntroduction] = useState(true);\n  const [game, setGame] = useState(false);\n  const [calculatingScore, setCalculatingScore] = useState(true);\n  const [finalMessage, setFinalMessage] = useState(\"\");\n  const [playId, setPlayId] = useState(uuidv4());\n  let username = \"\";\n \n  if(game_details.username == null){\n    username = \"\";\n  }\n  else{\n    username= \" \"+ game_details.username;\n  }\n \n  let startTime = new Date().toISOString();\n  const { user, setUser } = useContext(UserContext);\n \n  const genrateValues = () => {\n    let answer;\n    let number2 = 0;\n    let number1 = 0;\n    while (true) {\n      \n      number1 = 2 + Math.floor(Math.random() * 8);\n      number2 = 2 + Math.floor(Math.random() * 8);\n      answer = number1 * number2;\n \n      if (number1 in numberMap === false) {\n        if (!numberQueue.isFull()) {\n          numberMap[number1] = 0;\n          numberQueue.enqueue(number1);\n        } else {\n          const node = numberQueue.dequeue();\n          delete numberMap[node.value];\n          numberQueue.enqueue(number1);\n          numberMap[number1] = 0;\n        }\n        break;\n      }\n    }\n    \n    setNumberThree(number1);\n    setNumberTwo(answer);\n    setNumberOne(number2);\n \n   \n \n  };\n \n  useEffect(() => {\n    window.onbeforeunload = (event) => {\n      const e = event || window.event;\n      e.preventDefault();\n \n      if (e) {\n        e.returnValue = '';\n      }\n      return '';\n    };\n    genrateValues();\n  }, []);\n \n  const isValidMove = (event) => {\n    const input = Number(event.target.value);\n    setResponse(event.target.value);\n    if (event.target.value === '') {\n      setError(false);\n    } else if (input !== numberTwo) {\n      setError(true);\n    } else {\n      setTimeout(() => {\n        setResponse('');\n        genrateValues();\n      }, 300);\n      setError(false);\n      setCount(count + 1);\n    }\n  };\n \n  const calculateLevel = () => {\n    let message = \"Hi\"+username+\", Challenge yourself! You are currently at the STARTER level. Aim for \"+game_details.challenger_score+\" to go to the CHALLENGER LEVEL.\";\n    \n    switch(true){\n      case count >= Number(game_details.genius_score):\n        message = \"Hi\"+username+\", you were born to be genius! You are at the highet level now. But geniuses never stop, if you want to go further, keep practicing, keep going higher.\";\n        setFinalMessage(message);\n        break;\n      case count >= Number(game_details.master_score):\n        message = \"Hi MASTER\"+username+\", you are at MASTER level now, Congrats! soon to become a Genius! Master this a little more. Aim for \"+game_details.genius_score+\" and go to the GENIUS LEVEL.\";\n        setFinalMessage(message);\n        break;\n      case count >= Number(game_details.challenger_score):\n        message = \"Hi\"+username+\", you are a CHALLENGER now! You are soon to become a Master! Challenge yoruself a little more. Aim for \"+game_details.master_score+\" and go to the MASTER LEVEL.\";\n        setFinalMessage(message);\n        console.log(message);\n        break;\n      default:\n        setFinalMessage(message);\n        break;\n  \n    }\n    console.log(message);\n    console.log(count);\n    console.log(game_details.challenger_score);\n    setCalculatingScore(false);\n    setPercentile(myPercentile(count));\n  }\n \n  function replay() {\n    startTime = new Date().toISOString();\n    numberQueue.clear();\n    numberMap = {};\n    setUser(gameDetails);\n    setResponse('');\n    gameDetails = {};\n    setCount(0);\n    setGame(true);\n    setError(false);\n    setCalculatingScore(true);\n    setFinalMessage(\"\");\n    setPlayId(uuidv4());\n  }\n \n  const moveToGame = () => {\n    startTime = new Date().toISOString();\n    setIsIntroduction(false);\n    setGame(true);\n  };\n \n  const setGameTime = (time) => {\n    setTime(time);\n    setGameDuraion(time);\n  };\n \n  function _updateTime(remainingTime) {\n    setTime(remainingTime);\n    if (remainingTime <= 0) {\n      setGame(false);\n      gameDetails = JSON.parse(JSON.stringify(user))\n      gameDetails.games.push({ duration: gameDuration, startTime: startTime, score: count });\n    }\n  }\n \n  const percentileImage = () => {\n    if (percentile >= 85) return <img src={excellent} />;\n    if (percentile > 60 && percentile < 85) return <img src={good} />;\n    if (percentile < 60) return <img src={poor} />;\n  };\n \n  const updateScore = (playId, count, percentile, gameDuration) => {\n \n    const userId = Number(u_id);\n    \n \n    const payload = {\n        \"user_id\" : userId,\n        \"game_id\" : g_id,\n        \"play_id\" : playId,\n        \"score\" : count,\n        \"percentile\" : percentile,\n        \"duration\" : gameDuration\n    }\n \n    axios.post(`https://profved.com/wp-json/wp-json/wp/v1/games/`, { payload })\n      .then(response => {\n \n      })\n  }\n \n  return (\n    <>\n      <CourseHeader heading={game_details.name} />\n      {isIntroduction ? (\n        <>\n          {/* <img src={quiz} width=\"283\" height=\"auto\" className=\"quiz-image\" /> */}\n          <SlideInRightAnimate>\n            <Message>\n              <Typography\n                style={{ fontWeight: 400, color: '#5564CC', marginBottom: 10 }}\n                variant=\"h4\"\n              >\n                {game_details.description}\n              </Typography>\n \n              <div style={{ paddingTop: '5px', fontWeight: 200, color: '#5564CC' }}>\n                <Typography variant=\"h6\">\n                {game_details.introduction}\n                </Typography>\n              </div>\n            </Message>\n            <div className=\"start-game-container\">\n              {/* <SetTimer setTime={setGameTime} /> */}\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                style={{ marginTop: 10 }}\n                onClick={moveToGame}\n              >\n                <Typography variant=\"h6\">Let's Go</Typography>\n              </Button>\n            </div>\n          </SlideInRightAnimate>\n        </>\n      ) : game ? (\n        <>\n          <FadeInUpAnimate>\n            {/* <span className=\"emoji hourglass\"/> */}\n            <Timer\n              duration={gameDuration}\n              updateDuration={(remainingTime) => _updateTime(remainingTime)}\n            />\n            <Message className=\"question-section\">\n              <div className={classes.currentScore}>\n                <div className={classes.currentScoreText}> {count} </div>\n              </div>\n              <Grid>\n              <Typography variant=\"h3\" display=\"inline\" style={{ padding: 5 }}>\n                  {numberThree}\n                </Typography>\n                <Typography variant=\"h3\" display=\"inline\" style={{ padding: 5 }}>\n                  x\n                </Typography>\n                <Typography variant=\"h3\" display=\"inline\" style={{ padding: 5 }}>\n                  {numberOne}\n                </Typography>\n                <Typography variant=\"h3\" display=\"inline\" style={{ padding: 5 }}>\n                  =\n                </Typography>\n                <Typography variant=\"h3\" display=\"inline\" style={{ padding: 5 }}>\n                  <TextField\n                    autoFocus\n                    multiline={false}\n                    rowsMax={1}\n                    className={classes.root}\n                    inputProps={{\n                      style: {\n                        padding: 0,\n                        border: `${error ? '2px' : '1px'} solid ${error ? 'red' : 'black'}`,\n                      },\n                      maxLength: 3,\n                      inputMode: 'numeric',\n                    }}\n                    error={error}\n                    value={response}\n                    onChange={(event) => isValidMove(event)}\n                  />\n                </Typography>\n                \n              </Grid>\n            </Message>\n          </FadeInUpAnimate>\n        </>\n      ) : (\n        <SlideInRightAnimate>\n          <Message>\n            {\n              updateScore(playId, count, percentile, Number(game_details.duration))\n            }\n            <GameOverAnimate>\n              <Typography\n                variant=\"h3\"\n                display=\"inline\"\n                style={{\n                  textTransform: 'uppercase',\n                  fontFamily: \"'Press Start 2P', cursive\",\n                  fontSize: '3em',\n                }}\n              >\n                Game Over\n              </Typography>\n            </GameOverAnimate>\n \n            <Typography variant=\"h4\">Your score: {count}</Typography>\n            {\n              calculatingScore ? (\n                <>\n                <Typography variant=\"h4\">\n                  Hi{username}, We are calculating your score, Just give us sometime...\n                  {calculateLevel()}\n                </Typography>\n                  {finalMessage}\n                </>\n \n              ) : \n              \n              (\n                <>\n                <Typography variant=\"h4\">\n                  {finalMessage}\n                </Typography>\n                </>\n              )\n \n            }\n            <Typography variant=\"h4\">\n              {/* Your percentile: {percentile} */}\n              {/* {percentileImage()} */}\n              {/* You were compared against score of{' '}\n              {countValue} peers. */}\n            </Typography>\n            {user.games.length > 0 && (\n              <ScoreContainer>\n                <Typography variant=\"h5\">\n                  <div style={{ borderBottom: '1px solid black' }}>Previous Scores</div>\n \n                  <div style={{ maxHeight: '150px', overflowY: 'auto' }}>\n                    {user.games.map((game) => {\n                      return (\n                        <li>\n                          Duration: {Number(game.duration) / 60} mins, Score: {game.score}\n                        </li>\n                      );\n                    })}\n                  </div>\n                </Typography>\n              </ScoreContainer>\n            )}\n          </Message>\n          <div className=\"start-game-container\">\n            {/* <SetTimer setTime={setGameTime} /> */}\n            <Button color=\"primary\" variant=\"contained\" style={{ marginTop: 10 }} onClick={replay}>\n              <Typography variant=\"h6\">Play Again</Typography>\n            </Button>\n          </div>\n        </SlideInRightAnimate>\n      )}\n    </>\n  );\n};\n \nexport default QuestionSection;","import React from 'react';\n\nexport const userData = {\n  id: 'sdkdf-34083xf-23nkf34',\n  games: [],\n};\n\nexport const UserContext = React.createContext(null);\n","class Node {\n  value;\n  next;\n  constructor(value) {\n    this.value = value;\n    this.next = null;\n  }\n}\n\nexport class Queue {\n  front;\n  rear;\n  size;\n  currentSize;\n\n  constructor(size) {\n    this.rear = null;\n    this.front = null;\n    this.size = size;\n    this.currentSize = 0;\n  }\n\n  isFull() {\n    if (this.currentSize >= this.size) {\n      return true;\n    }\n    return false;\n  }\n\n  enqueue(item) {\n    const node = new Node(item);\n    this.currentSize += 1;\n    if (this.rear === null) {\n      this.rear = node;\n      this.front = node;\n      return true;\n    }\n    this.rear.next = node;\n    this.rear = node;\n  }\n\n  dequeue() {\n    if (this.front === null) {\n      this.rear = null;\n      return;\n    }\n    const node = this.front;\n    this.front = this.front.next;\n\n    this.currentSize -= 1;\n    return node;\n  }\n\n  clear() {\n    this.front = null;\n    this.rear = null;\n    this.currentSize = 0;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/quiz_board.bbfba0b2.svg\";","export default __webpack_public_path__ + \"static/media/question.06eaefea.svg\";","export default __webpack_public_path__ + \"static/media/excellent.45ee39bf.svg\";","export default __webpack_public_path__ + \"static/media/good.cd88e9a2.svg\";","export default __webpack_public_path__ + \"static/media/poor.fa42fa2e.svg\";","import React, { useEffect, useState } from 'react';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Container, Grid } from '@material-ui/core';\nimport Timer from '../../Quiz/Timer';\nimport QuestionSection from '../../Quiz/QuestionSection';\nimport './style.css';\nimport { UserContext, userData } from './UserContext';\nimport quiz from '../../../images/quiz_board.svg';\nimport axios from 'axios';\n\nexport const Dashboard = ({g_id, u_id}) => {\n  const [user, setUser] = useState(userData);\n  return (\n    <Paper\n      variant=\"outlined\"\n      style={{ display: 'flex', flexDirection: 'row', backgroundColor: '#F5F7FA' }}\n    >\n      <UserContext.Provider value={{ user, setUser }}>\n        <SimpleCard g_id={g_id} u_id={u_id} />\n      </UserContext.Provider>\n      {/* <Skeleton variant=\"rect\" width={210} height={118} /> */}\n    </Paper>\n  );\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: 900,\n    backgroundColor: '#F5F7FA',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  inside: {\n    flexDirection: 'row',\n    display: 'flex',\n    height: '60%',\n    alignContent: 'center',\n    justifyContent: 'center',\n    marign: '0px 20px',\n  },\n  button: {\n    width: '100%',\n    height: '100%',\n  },\n});\n\nfunction SimpleCard({g_id, u_id}) {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState();\n  \n  useEffect(() => {\n    if(loading){\n      const payload = {\n        \"game_id\": g_id,\n        \"user_id\": u_id\n      }\n  \n      axios.post(\"https://profved.com/wp-json/wp/v1/game_meta_data\", { payload })\n        .then(response => {\n          setData(response.data.msg[0]);\n          setLoading(false);\n        })\n        .catch(exception => {\n          console.log(exception);\n          setLoading(false);\n        });\n    }\n  });\n\n  return (\n    <Grid >\n      <Grid item md={12}>\n        <Card className=\" widget-container\">\n          <CardContent className=\"dashboard-background\">\n            {loading ? (\n              <Skeleton variant=\"rect\" width=\"100%\" height=\"20%\">\n                <div style={{ paddingTop: '10%' }} />\n              </Skeleton>\n            ) : (\n              <>\n                <QuestionSection game_details={data} g_id={g_id} u_id={u_id} />\n              </>\n            )}\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { Dashboard } from './Components/Layout/Dashboard';\nimport Quiz from './Components/Quiz/Quiz';\nimport './style.css';\n\nexport default function App({ domElement }) {\n  const g_id = domElement.getAttribute('data-game-id');\n  let u_id = domElement.getAttribute('data-user-id');\n  if(u_id === \"0\"){\n    u_id = \"-1\";\n  }\n  return (\n    <Grid container>\n      <Dashboard g_id={g_id} u_id={u_id} />\n    </Grid>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Find all widget divs\nconst WidgetDivs = document.querySelectorAll('.quiz_widget')\n\nWidgetDivs.forEach(Div => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App domElement={Div} />\n    </React.StrictMode>,\n    Div\n  );\n})\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}