{"version":3,"sources":["quiz.jsx","storeData.js","App.js","reportWebVitals.js","index.js"],"names":["Quiz","quiz","questions","questionsAdd","questionsSub","useState","currentQuestion","setCurrentQuestion","gameStatus","setGameStatus","score","setScore","option","setOption","allAnswers","setAllAnswers","handleAnswerButtonClick","answerOption","index","nextQuestion","isCorrect","setTimeout","length","storageKey","data","values","localStorage","getItem","updateScores","JSON","parse","push","setItem","stringify","newScores","storeData","total","correctAnswers","replay","className","questionText","answerOptions","map","type","onClick","answerText","removeItem","e","App","domElement","title","getAttribute","game","loading","setLoading","error","useEffect","renderQuiz","href","rel","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","document","querySelectorAll","forEach","Div","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fe88b80b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport questionsAdd from './quiz-addition.json';\nimport questionsSub from './quiz-subtraction.json';\nimport { storeData, clearData } from './storeData';\n\nexport default function Quiz({ quiz }) {\n  let questions = [];\n  switch (quiz) {\n    case 'simple_math_addition':\n      questions = questionsAdd;\n      break;\n    case 'simple_math_subtraction':\n      questions = questionsSub;\n      break;\n    default:\n      questions = questionsAdd;\n  }\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [gameStatus, setGameStatus] = useState(true);\n  const [score, setScore] = useState(0);\n  const [option, setOption] = useState(null);\n  const [allAnswers, setAllAnswers] = useState([]);\n  const handleAnswerButtonClick = (answerOption, index) => {\n    const nextQuestion = currentQuestion + 1;\n    setOption(index);\n    if (answerOption.isCorrect) {\n      setScore(score + 1);\n    }\n    setTimeout(() => {\n      setOption(null);\n      if (nextQuestion < questions.length) {\n        setCurrentQuestion(nextQuestion);\n      } else {\n        setGameStatus(false);\n        setAllAnswers(\n          storeData('scores', {\n            total: nextQuestion,\n            correctAnswers: score,\n          }),\n        );\n      }\n    }, 1000);\n  };\n\n  const checkOptions = (isCorrect) => {\n    if (isCorrect) return 'correct';\n    return 'incorrect';\n  };\n\n  const replay = () => {\n    setCurrentQuestion(0);\n    setGameStatus(true);\n    setScore(0);\n  };\n\n  const clearScore = () => {\n    clearData('scores');\n    setAllAnswers([]);\n    replay();\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"shadow\">\n        {!gameStatus ? (\n          <>\n            <div className=\"score-section\">\n              You scored {score} out of {questions.length}\n            </div>\n            <button type=\"button\" onClick={replay}>\n              Replay\n            </button>\n            <button type=\"button\" onClick={clearScore}>\n              Clear\n            </button>\n          </>\n        ) : (\n          <div>\n            <div className=\"question-section\">\n              <div className=\"question-count\">\n                <span>Question {currentQuestion + 1} </span>/{questions.length}\n              </div>\n              <div className=\"question-text\">{questions[currentQuestion].questionText}</div>\n            </div>\n            <div className=\"answer-section\">\n              {questions[currentQuestion].answerOptions.map((answerOption, index) => (\n                <button\n                  type=\"button\"\n                  key={`${index}`}\n                  onClick={() => handleAnswerButtonClick(answerOption, index)}\n                  className={`${\n                    index === option ? checkOptions(answerOption.isCorrect) : ''\n                  } option`}\n                >\n                  {' '}\n                  {answerOption.answerText}\n                </button>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n      <ul>\n        {allAnswers.map((e) => (\n          <li>\n            Total Questions: {e.total} Correct Answers: {e.correctAnswers}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","export const storeData = (storageKey, data) => {\n  const values = localStorage.getItem(storageKey);\n  if (values !== null) {\n    const updateScores = JSON.parse(values);\n    updateScores.push({\n      ...data,\n    });\n    localStorage.setItem(storageKey, JSON.stringify(updateScores));\n  } else {\n    const newScores = [{ ...data }];\n    localStorage.setItem(storageKey, JSON.stringify(newScores));\n  }\n  return JSON.parse(localStorage.getItem(storageKey));\n};\n\nexport const clearData = (storageKey) => {\n  const values = localStorage.getItem(storageKey);\n  if(values !== null){\n    localStorage.removeItem(storageKey);\n    return true;\n  }\n  return false;\n}\n","import React, { useState, useEffect } from 'react';\nimport Quiz from './quiz';\n\nexport default function App({ domElement }) {\n  const title = domElement.getAttribute('data-title');\n  const course = domElement.getAttribute('data-course');\n  const game = domElement.getAttribute('data-exercise');\n\n  const [loading, setLoading] = useState();\n  const [error, setError] = useState('');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setLoading(false);\n    // fetch(`https://quizes.free.beeceptor.com/quiz-maths`)\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     setLoading(false);\n    //     console.log(data);\n    //     setData(data);\n    //   })\n    //   .catch((e) => {\n    //     console.log(e)\n    //     setLoading(false);\n    //     setError('error fetching from reddit');\n    //   });\n  }, [game]);\n\n  return (\n    <div className=\"quiz_widget__app\">\n      <h1 className=\"quiz_widget__header\">{title}</h1>\n      <div className=\"quiz_widget__inner\">\n        {loading && 'Loading...'}\n        {error && error}\n        {renderQuiz(game)}\n      </div>\n      <p className=\"reddit_widget__powered_by\">\n        This widget is powered by{' '}\n        <a href=\"https://dvm.academy\" rel=\"noopener noreferrer\" target=\"_blank\">\n          DVM Academy\n        </a>\n      </p>\n    </div>\n  );\n}\n\nfunction renderQuiz(game) {\n  switch (game) {\n    case 'simple_math_addition':\n      return <Quiz quiz={game} />;\n    case 'simple_math_subtraction':\n      return <Quiz quiz={game} />;\n    default:\n      return <Quiz />;\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Find all widget divs\nconst WidgetDivs = document.querySelectorAll('.quiz_widget')\n\nWidgetDivs.forEach(Div => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App domElement={Div} />\n    </React.StrictMode>,\n    Div\n  );\n})\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}