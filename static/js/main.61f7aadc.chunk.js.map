{"version":3,"sources":["Components/Quiz/Timer/styled.js","Components/Quiz/Timer/index.jsx","Components/Quiz/CourseHeader/index.jsx","Components/Quiz/Message/index.jsx","Components/Quiz/QuestionSection/styled.js","Components/Quiz/QuestionSection/index.jsx","Components/Layout/Dashboard/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["TimeContainer","styled","div","keyframes","shake","h3","props","background","momentDurationFormatSetup","moment","useStyles","makeStyles","root","width","position","top","Timer","duration","updateDuration","classes","React","useState","progress","setProgress","time","setTime","timerColor","setTimerColor","factor","Math","floor","useEffect","id","setInterval","changeColor","clearInterval","round","className","LinearProgress","variant","value","style","height","display","justifyContent","zIndex","format","CourseHeader","heading","Card","backdropFilter","CardContent","Typography","Message","children","padding","textAlign","marginTop","SlideInRightAnimate","slideInRight","FadeInUpAnimate","fadeInUp","fontSize","QuestionSection","numberOne","setNumberOne","numberTwo","setNumberTwo","numberThree","setNumberThree","response","setResponse","error","setError","count","setCount","genrateValues","answers","answer","random","length","number1","number2","remainingTime","Grid","TextField","multiline","rowsMax","inputProps","border","maxLength","toString","inputMode","onChange","event","input","Number","target","setTimeout","isValidMove","Button","color","onClick","Dashboard","Paper","flexDirection","SimpleCard","bullet","margin","transform","title","pos","marginBottom","inside","alignContent","marign","button","loading","setLoading","Skeleton","paddingTop","App","domElement","game","getAttribute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","document","querySelectorAll","forEach","Div","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.61f7aadc.chunk.js","sourcesContent":["import { shake } from 'react-animations';\nimport styled, { keyframes } from 'styled-components';\n\nexport const ShakeAnimate = styled.div`\n  animation: 1.5s ${keyframes`${shake}`} 2;\n`;\n\nexport const TimeContainer = styled.h3`\n  padding: 4px;\n  margin: 0;\n  width: 100px;\n  text-align: center;\n  border-radius: 0%;\n  font-size: 36px;\n  border: ${(props) => `1px solid ${props.background}`};\n  font-family: 'Open Sans', sans-serif;\n  background: ${(props) => props.background};\n  color: white;\n  border-radius: 12px;\n  right: 10px;\n  position: relative;\n`;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport momentDurationFormatSetup from 'moment-duration-format';\nimport Card from '@material-ui/core/Card';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TimeContainer, ShakeAnimate } from './styled';\n\nmomentDurationFormatSetup(moment);\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    position: 'relative',\n    top: '30px',\n  },\n});\n\nconst Timer = ({ duration, updateDuration }) => {\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(100);\n  const [time, setTime] = useState(duration);\n  const [timerColor, setTimerColor] = useState('#2962ff');\n  const factor = Math.floor(duration / 100);\n  useEffect(() => {\n    const id = setInterval(() => {\n      if (time !== 0) {\n        setTime(time - 1);\n        if (time % factor === 0) setProgress(progress - 1);\n        changeColor();\n      }\n      updateDuration(time);\n    }, 1000);\n    return () => {\n      clearInterval(id);\n    };\n  }, [time]);\n\n  const changeColor = () => {\n    if (time === Math.round(duration / 2)) setTimerColor('darkorange');\n    else if (time === 60) setTimerColor('#dd2c00');\n  };\n\n  const displayTime = () => moment.duration(time, 'seconds').format('hh:mm:ss');\n\n  return (\n    <>\n      <div className={classes.root}>\n        <LinearProgress variant=\"determinate\" value={progress} style={{ height: '5px' }} />\n      </div>\n      <div\n        style={{ display: 'flex', justifyContent: 'flex-end', position: 'relative', zIndex: '10' }}\n      >\n        <TimeContainer background={timerColor}>{displayTime()}</TimeContainer>\n      </div>\n    </>\n  );\n};\n\nexport default Timer;\n\nTimer.propTypes = {\n  duration: PropTypes.number.isRequired,\n  updateDuration: PropTypes.func.isRequired,\n};\n","import { Card, CardContent, Typography } from '@material-ui/core';\nimport React from 'react';\n\nconst CourseHeader = ({ heading }) => {\n  return (\n    <>\n      <Card style={{ background: 'transparent', backdropFilter: 'blur(4px)' }}>\n        <CardContent>\n          <Typography variant=\"h3\">{heading}</Typography>\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport default CourseHeader;\n","import { Card } from '@material-ui/core';\nimport React from 'react';\n\nconst Message = ({ children }) => (\n  <Card\n    style={{\n      padding: '50px',\n      textAlign: 'center',\n      marginTop: '3%',\n      height: '100%',\n      background: 'transparent',\n      backdropFilter: 'blur(4px)',\n    }}\n  >\n    {children}\n  </Card>\n);\n\nexport default Message;\n","import { slideInRight, fadeInUp } from 'react-animations';\nimport styled, { keyframes } from 'styled-components';\n\nexport const SlideInRightAnimate = styled.div`\n  animation: 1.5s ${keyframes`${slideInRight}`} 1;\n`;\n\nexport const FadeInUpAnimate = styled.div`\n  animation: 1s ${keyframes`${fadeInUp}`} 1;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Card, Grid, TextField, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Timer from '../Timer';\nimport CourseHeader from '../CourseHeader';\nimport Message from '../Message';\nimport { FadeInUpAnimate, SlideInRightAnimate } from './styled';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 75,\n    '& .MuiInputBase-root': {\n      fontSize: '3rem',\n    },\n  },\n});\n\nconst QuestionSection = ({ duration }) => {\n  const classes = useStyles();\n  const [numberOne, setNumberOne] = useState(0);\n  const [numberTwo, setNumberTwo] = useState(0);\n  const [numberThree, setNumberThree] = useState(0);\n  const [response, setResponse] = useState('');\n  const [error, setError] = useState(false);\n  const [time, setTime] = useState(duration);\n  const [count, setCount] = useState(0);\n\n  const genrateValues = () => {\n    const answers = [10, 100, 1000];\n    const answer = answers[Math.floor(Math.random() * answers.length)];\n\n    let number1 = 0;\n    switch (answer) {\n      case 10:\n        number1 = Math.round(Math.random() * 9);\n        break;\n      case 100:\n        number1 = 10 + Math.round(Math.random() * 89);\n        break;\n      case 1000:\n        number1 = 100 + Math.round(Math.random() * 899);\n        break;\n      default:\n        number1 = Math.round(Math.random() * 10);\n    }\n\n    const number2 = answer - number1;\n\n    setNumberThree(answer);\n    setNumberTwo(number2);\n    setNumberOne(number1);\n  };\n\n  useEffect(() => {\n    genrateValues();\n  }, []);\n\n  const isValidMove = (event) => {\n    const input = Number(event.target.value);\n    setResponse(event.target.value);\n    if (event.target.value === '') {\n      setError(false);\n    } else if (input !== numberTwo) {\n      setError(true);\n    } else {\n      setTimeout(() => {\n        setResponse('');\n        genrateValues();\n      }, 500);\n      setError(false);\n      setCount(count + 1);\n    }\n  };\n\n  return (\n    <>\n      <CourseHeader heading=\"Course Introduction\" />\n      {time > 0 ? (\n        <FadeInUpAnimate>\n          <Timer duration={duration} updateDuration={(remainingTime) => setTime(remainingTime)} />\n          <Message>\n            <Grid>\n              <Typography variant=\"h3\" display=\"inline\" style={{ padding: 5 }}>\n                {numberOne}\n              </Typography>\n              <Typography variant=\"h3\" display=\"inline\" style={{ padding: 5 }}>\n                +\n              </Typography>\n              <Typography variant=\"h3\" display=\"inline\" style={{ padding: 5 }}>\n                <TextField\n                  multiline={false}\n                  rowsMax={1}\n                  className={classes.root}\n                  inputProps={{\n                    style: {\n                      padding: 0,\n                      border: `${error ? '2px' : '1px'} solid ${error ? 'red' : 'black'}`,\n                    },\n                    maxLength: (numberThree - numberOne).toString().length,\n                    inputMode: 'numeric',\n                  }}\n                  error={error}\n                  value={response}\n                  onChange={(event) => isValidMove(event)}\n                />\n              </Typography>\n              <Typography variant=\"h3\" display=\"inline\" style={{ padding: 5 }}>\n                =\n              </Typography>\n              <Typography variant=\"h3\" display=\"inline\" style={{ padding: 5 }}>\n                {numberThree}\n              </Typography>\n            </Grid>\n          </Message>\n        </FadeInUpAnimate>\n      ) : (\n        <SlideInRightAnimate>\n          <Message>\n            <Typography variant=\"h3\" display=\"inline\">\n              Game Over\n            </Typography>\n            <Typography variant=\"h4\">Your score: {count}</Typography>\n          </Message>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              style={{ marginTop: 10 }}\n              onClick={() => setTime(duration)}\n            >\n              <Typography variant=\"h6\">REPLAY</Typography>\n            </Button>\n          </div>\n        </SlideInRightAnimate>\n      )}\n    </>\n  );\n};\n\nexport default QuestionSection;\n","import React, { useEffect, useState } from 'react';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Container } from '@material-ui/core';\nimport Timer from '../../Quiz/Timer';\nimport QuestionSection from '../../Quiz/QuestionSection';\nimport './style.css';\n\nexport const Dashboard = (props) => {\n  return (\n    <Paper variant=\"outlined\" style={{ display: 'flex', flexDirection: 'row' }}>\n      <SimpleCard />\n      {/* <Skeleton variant=\"rect\" width={210} height={118} /> */}\n    </Paper>\n  );\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: 900,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  inside: {\n    flexDirection: 'row',\n    display: 'flex',\n    height: '60%',\n    alignContent: 'center',\n    justifyContent: 'center',\n    marign: '0px 20px',\n  },\n  button: {\n    width: '100%',\n    height: '100%',\n  },\n});\n\nfunction SimpleCard() {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 3000);\n  });\n\n  return (\n    <Card className={[classes.root, 'dashboard-background']}>\n      <CardContent>\n        {loading ? (\n          <Skeleton variant=\"rect\" width=\"100%\" height=\"20%\">\n            <div style={{ paddingTop: '10%' }} />\n          </Skeleton>\n        ) : (\n          // <img\n          //   src=\"https://i.pinimg.com/originals/5a/bf/93/5abf939069cc0ae4633e9b1670f11ed5.jpg\"\n          //   width=\"300\"\n          //   height=\"400\"\n          //   alt=\"\"\n          // />\n          <QuestionSection duration={5 * 60} />\n        )}\n      </CardContent>\n\n      {/* <CardContent style={{ height: '75%' }}>\n        {loading ? (\n          <Skeleton variant=\"rect\" width=\"100%\" height=\"100%\">\n            <div style={{ paddingTop: '10%' }} />\n          </Skeleton>\n        ) : (\n          <img\n            src=\"https://i.pinimg.com/originals/5a/bf/93/5abf939069cc0ae4633e9b1670f11ed5.jpg\"\n            width=\"300\"\n            height=\"400\"\n            alt=\"\"\n          />\n        )}\n      </CardContent> */}\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Dashboard } from './Components/Layout/Dashboard';\nimport Quiz from './Components/Quiz/Quiz';\nimport './style.css';\n\nexport default function App({ domElement }) {\n  const title = domElement.getAttribute('data-title');\n  const course = domElement.getAttribute('data-course');\n  const game = domElement.getAttribute('data-exercise');\n\n  const [loading, setLoading] = useState();\n  const [error, setError] = useState('');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setLoading(false);\n    // fetch(`https://quizes.free.beeceptor.com/quiz-maths`)\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     setLoading(false);\n    //     console.log(data);\n    //     setData(data);\n    //   })\n    //   .catch((e) => {\n    //     console.log(e)\n    //     setLoading(false);\n    //     setError('error fetching from reddit');\n    //   });\n  }, [game]);\n\n  return (\n    // <div className=\"quiz_widget__app\">\n    //   <h1 className=\"quiz_widget__header\">{title}</h1>\n    //   <div className=\"quiz_widget__inner\">\n    //     {loading && 'Loading...'}\n    //     {error && error}\n    //     <Dashboard />\n    //   </div>\n    //   <p className=\"reddit_widget__powered_by\">\n    //     This widget is powered by{' '}\n    //     <a href=\"https://dvm.academy\" rel=\"noopener noreferrer\" target=\"_blank\">\n    //       DVM Academy\n    //     </a>\n    //   </p>\n    // </div>\n    <Dashboard />\n  );\n}\n\nfunction renderQuiz(game) {\n  switch (game) {\n    case 'simple_math_addition':\n      return <Quiz quiz={game} />;\n    case 'simple_math_subtraction':\n      return <Quiz quiz={game} />;\n    default:\n      return <Quiz />;\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Find all widget divs\nconst WidgetDivs = document.querySelectorAll('.quiz_widget')\n\nWidgetDivs.forEach(Div => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App domElement={Div} />\n    </React.StrictMode>,\n    Div\n  );\n})\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}