{"id":"../node_modules/parcel-bundler/src/builtins/bundle-loader.js","dependencies":[{"name":"/Users/admin/Documents/react/widget-quiz/package.json","includedInParent":true,"mtime":1621148495793},{"name":"/Users/admin/Documents/react/widget-quiz/node_modules/parcel-bundler/package.json","includedInParent":true,"mtime":1621146130711},{"name":"/Users/admin/Documents/react/widget-quiz/node_modules/parcel-bundler/src/.babelrc","includedInParent":true,"mtime":1621146130711},{"name":"./bundle-url","loc":{"line":1,"column":27},"parent":"/Users/admin/Documents/react/widget-quiz/node_modules/parcel-bundler/src/builtins/bundle-loader.js","resolved":"/Users/admin/Documents/react/widget-quiz/node_modules/parcel-bundler/src/builtins/bundle-url.js"}],"generated":{"js":"var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles];\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1)).then(function () {\n          return require(id);\n        }).then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\n\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\nvar bundles = {};\n\nfunction loadBundle(bundle) {\n  var id;\n\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle).then(function (resolved) {\n      if (resolved) {\n        module.bundle.register(id, resolved);\n      }\n\n      return resolved;\n    }).catch(function (e) {\n      delete bundles[bundle];\n      throw e;\n    });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor);\n  return this.promise.then(onSuccess, onError);\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor);\n  return this.promise.catch(onError);\n};"},"sourceMaps":null,"error":null,"hash":"a7c67aa2aa77a77742081e7a734faa8e","cacheData":{"env":{}}}