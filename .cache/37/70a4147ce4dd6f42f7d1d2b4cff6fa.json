{"id":"quiz.js","dependencies":[{"name":"/Users/admin/Documents/react/widget-quiz/package.json","includedInParent":true,"mtime":1621148495793},{"name":"react","loc":{"line":1,"column":52},"parent":"/Users/admin/Documents/react/widget-quiz/src/quiz.js","resolved":"/Users/admin/Documents/react/widget-quiz/node_modules/react/index.js"},{"name":"./App.css","loc":{"line":2,"column":7},"parent":"/Users/admin/Documents/react/widget-quiz/src/quiz.js","resolved":"/Users/admin/Documents/react/widget-quiz/src/App.css"},{"name":"./quiz-addition.json","loc":{"line":3,"column":25},"parent":"/Users/admin/Documents/react/widget-quiz/src/quiz.js","resolved":"/Users/admin/Documents/react/widget-quiz/src/quiz-addition.json"},{"name":"./quiz-subtraction.json","loc":{"line":4,"column":25},"parent":"/Users/admin/Documents/react/widget-quiz/src/quiz.js","resolved":"/Users/admin/Documents/react/widget-quiz/src/quiz-subtraction.json"},{"name":"./storeData","loc":{"line":5,"column":37},"parent":"/Users/admin/Documents/react/widget-quiz/src/quiz.js","resolved":"/Users/admin/Documents/react/widget-quiz/src/storeData.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Quiz;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nrequire(\"./App.css\");\n\nvar _quizAddition = _interopRequireDefault(require(\"./quiz-addition.json\"));\n\nvar _quizSubtraction = _interopRequireDefault(require(\"./quiz-subtraction.json\"));\n\nvar _storeData = require(\"./storeData\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction Quiz({\n  quiz\n}) {\n  console.log(quiz);\n  let questions = [];\n\n  switch (quiz) {\n    case 'simple_math_addition':\n      questions = _quizAddition.default;\n      break;\n\n    case 'simple_math_subtraction':\n      questions = _quizSubtraction.default;\n      ;\n      break;\n\n    default:\n      questions = _quizAddition.default;\n  }\n\n  const [currentQuestion, setCurrentQuestion] = (0, _react.useState)(0);\n  const [gameStatus, setGameStatus] = (0, _react.useState)(true);\n  const [score, setScore] = (0, _react.useState)(0);\n  const [answer, setAnswer] = (0, _react.useState)(null);\n  const [allAnswers, setAllAnswers] = (0, _react.useState)([]);\n\n  const handleAnswerButtonClick = (isCorrect, answerText) => {\n    const nextQuestion = currentQuestion + 1;\n\n    if (isCorrect) {\n      setScore(score + 1);\n      setAnswer(answerText);\n    }\n\n    setTimeout(() => {\n      setAnswer(null);\n\n      if (nextQuestion < questions.length) {\n        setCurrentQuestion(nextQuestion);\n      } else {\n        setGameStatus(false);\n        setAllAnswers((0, _storeData.storeData)(\"scores\", {\n          total: nextQuestion,\n          correctAnswers: score\n        }));\n      }\n    }, 1000);\n  };\n\n  const checkOptions = answerText => {\n    if (answer !== null) {\n      if (answerText === answer) return \"correct\";else return \"incorrect\";\n    }\n\n    return \"\";\n  };\n\n  const replay = () => {\n    setCurrentQuestion(0);\n    setGameStatus(true);\n    setScore(0);\n  };\n\n  const clearScore = () => {\n    (0, _storeData.clearData)(\"scores\");\n    setAllAnswers([]);\n    replay();\n  };\n\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"App\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"shadow\"\n  }, !gameStatus ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"score-section\"\n  }, \"You scored \", score, \" out of \", questions.length), /*#__PURE__*/_react.default.createElement(\"button\", {\n    onClick: replay\n  }, \"Replay\"), /*#__PURE__*/_react.default.createElement(\"button\", {\n    onClick: clearScore\n  }, \"Clear\")) : /*#__PURE__*/_react.default.createElement(\"div\", null, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"question-section\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"question-count\"\n  }, /*#__PURE__*/_react.default.createElement(\"span\", null, \"Question \", currentQuestion + 1, \" \"), \"/\", questions.length), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"question-text\"\n  }, questions[currentQuestion].questionText)), /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"answer-section\"\n  }, questions[currentQuestion].answerOptions.map((answerOption, index) => /*#__PURE__*/_react.default.createElement(\"button\", {\n    key: `${index}`,\n    onClick: () => handleAnswerButtonClick(answerOption.isCorrect, answerOption.answerText),\n    className: `${checkOptions(answerOption.answerText)}`\n  }, \" \", answerOption.answerText))))), /*#__PURE__*/_react.default.createElement(\"ul\", null, allAnswers.map(e => /*#__PURE__*/_react.default.createElement(\"li\", null, \"Total Questions: \", e.total, \" Correct Answers: \", e.correctAnswers))));\n}"},"sourceMaps":null,"error":null,"hash":"4344e9b53b0bc612fb45a65b7a5d178d","cacheData":{"env":{}}}